name: Build TTPOS Cashier APK

env:
  target: production
  repository: innet8/cash-register-system
  title: TTPOS
  brand: ttpos
  webLogo: ''
  mode: saas
  saasApiUrl: 'http://172.20.171.88'
  apk_path: app/JBC/app/build/outputs/apk/ttpos/release/
  upload_path: dc_apk/TTPOS/JP/Cashier/
  
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      branch: 
        description: 'branch (e.g., release)'
        required: true
        default: 'release'
      base_url: 
        description: 'base_url (e.g., base_url)'
        required: false
        default: 'http://172.20.171.88'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          repository: ${{ env.repository }} # 目标仓库的 owner 和名称
          token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
          ref: ${{ github.event_name == 'push' && github.ref || github.event.inputs.branch }}
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: version configuration
        id: config
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            tag=${{ github.ref }}
            new_version=$(echo ${tag} | sed 's/refs\/tags\/v//')
          else
            new_version="${{ github.event.inputs.version }}"
          fi
          new_version_code=$(date +%y%m%d%H)
          jq '.version = "'${new_version}'" | .versionCode = '${new_version_code}'' package.json > tmp.json && mv tmp.json package.json
          cat > src/static/config.js  <<EOF
          window.config = () => {
              return {
                  title: '${{ env.title }}', // 默认浏览器标题 JBCレジ TTPOS
                  brand: '${{ env.brand }}', // 品牌 日本=> jbc, 泰国=>ttpos
                  webLogo: '${{ env.webLogo }}', // webLogo有值是优先加载Logo 否则按照地区加载默认图标
                  mode: '${{ env.mode }}', // 部署模式 saas=云端部署 or local=局域网部署
                  saasApiUrl: '${{ env.saasApiUrl }}'
              };
          };
          EOF
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "new_version_code=$new_version_code" >> $GITHUB_OUTPUT
          if [ -f ".env.example" ]; then
            cp .env.example .env
            sed -i '/APP_BASE_URL/d' .env
            sed -i '/APP_TARGET/d' .env
            echo "APP_BASE_URL=${{ env.saasApiUrl }}" >> .env
            echo "APP_TARGET=${{ env.target }}" >> .env
          fi

      - name: Build the MINI
        working-directory: ./app/Mini
        run: |
          pnpm install fs-extra
          pnpm install
          pnpm run build:web-app
          
      - name: Build the Webapp
        run: |
          pnpm install
          pnpm run build:web-app
          #ls dist/build/h5/assets
          #ls app/JBC/app/src/main/assets/hybrid/assets
      - name: Build the APK
        working-directory: ./app/JBC
        run: |
          chmod +x gradlew
          version=${{ steps.config.outputs.new_version }}
          version_code=${{ steps.config.outputs.new_version_code }}
          ./gradlew assemble "-PCustomCode=${version_code}" "-PVersionName=${version}" "-PPackageTimes=1" 
          #./autoBuild.sh full
      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_STORAGE_CREDENTIALS }}'  

      - id: 'upload-files'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: ${{ env.apk_path }}
          destination: ${{ env.upload_path }}      
          parent: false
          
      - name: Save Build Result
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: |
            app/JBC/app/build/outputs/apk/jbc/release/*.apk
            app/JBC/app/build/outputs/apk/ttpos/release/*.apk
